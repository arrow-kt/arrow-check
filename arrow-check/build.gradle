repositories {
    maven { url 'https://dl.bintray.com/jannis/kotlin-pretty' }
    maven { url 'https://dl.bintray.com/jannis/kparsec' }
}

apply plugin: 'kotlin-kapt'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    kapt "io.arrow-kt:arrow-meta:$arrow_version" // auto generation for @extension and @higherkind

    // TODO do a pass on what is still needed and what not!
    // TODO also should some of those be api? Because the types and methods are exposed, not sure
    //  how exactly that works
    implementation "io.arrow-kt:arrow-fx:$arrow_version" // IO and arrow fx
    implementation "io.arrow-kt:arrow-fx-mtl:$arrow_version" // IO and arrow fx
    implementation "io.arrow-kt:arrow-free:$arrow_version" // Trampoline for stacksafety tests
    implementation "io.arrow-kt:arrow-optics:$arrow_version" // lenses and @optics
    implementation "io.arrow-kt:arrow-syntax:$arrow_version" // helper functions like curried...
    implementation "io.arrow-kt:arrow-mtl:$arrow_version" // StateT, Reader, Writer...
    implementation "io.arrow-kt:arrow-recursion:$arrow_version" // Recursion schemes
    api "kotlin-pretty:kotlin-pretty:0.5.2" // Pretty printing diffs
    api "kotlin-pretty:kotlin-pretty-ansi:0.5.2" // Ansi terminal support with colors
    api "kparsec:kparsec:0.2.2" // Parser combinators to create toString-output parser

    testImplementation project(":arrow-check-kotlintest")
    testImplementation("io.arrow-kt:arrow-core-test:$arrow_version") { // test helpers and laws
        exclude group: "io.kotlintest"
    }
    testImplementation("io.arrow-kt:arrow-fx-test:$arrow_version") { // test helpers and laws
        exclude group: "io.kotlintest"
    }
    testImplementation("io.arrow-kt:arrow-incubator-test:$arrow_version") { // test helpers and laws
        exclude group: "io.kotlintest"
    }
}

test {
    useJUnitPlatform()
}
